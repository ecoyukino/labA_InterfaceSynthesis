// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="array_io_array_io,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.581000,HLS_SYN_LAT=33,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1274,HLS_SYN_LUT=2118,HLS_VERSION=2022_1}" *)

module array_io (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_o_din,
        d_o_full_n,
        d_o_write,
        d_i_address0,
        d_i_ce0,
        d_i_q0,
        d_i_address1,
        d_i_ce1,
        d_i_q1
);

parameter    ap_ST_fsm_state1 = 34'd1;
parameter    ap_ST_fsm_state2 = 34'd2;
parameter    ap_ST_fsm_state3 = 34'd4;
parameter    ap_ST_fsm_state4 = 34'd8;
parameter    ap_ST_fsm_state5 = 34'd16;
parameter    ap_ST_fsm_state6 = 34'd32;
parameter    ap_ST_fsm_state7 = 34'd64;
parameter    ap_ST_fsm_state8 = 34'd128;
parameter    ap_ST_fsm_state9 = 34'd256;
parameter    ap_ST_fsm_state10 = 34'd512;
parameter    ap_ST_fsm_state11 = 34'd1024;
parameter    ap_ST_fsm_state12 = 34'd2048;
parameter    ap_ST_fsm_state13 = 34'd4096;
parameter    ap_ST_fsm_state14 = 34'd8192;
parameter    ap_ST_fsm_state15 = 34'd16384;
parameter    ap_ST_fsm_state16 = 34'd32768;
parameter    ap_ST_fsm_state17 = 34'd65536;
parameter    ap_ST_fsm_state18 = 34'd131072;
parameter    ap_ST_fsm_state19 = 34'd262144;
parameter    ap_ST_fsm_state20 = 34'd524288;
parameter    ap_ST_fsm_state21 = 34'd1048576;
parameter    ap_ST_fsm_state22 = 34'd2097152;
parameter    ap_ST_fsm_state23 = 34'd4194304;
parameter    ap_ST_fsm_state24 = 34'd8388608;
parameter    ap_ST_fsm_state25 = 34'd16777216;
parameter    ap_ST_fsm_state26 = 34'd33554432;
parameter    ap_ST_fsm_state27 = 34'd67108864;
parameter    ap_ST_fsm_state28 = 34'd134217728;
parameter    ap_ST_fsm_state29 = 34'd268435456;
parameter    ap_ST_fsm_state30 = 34'd536870912;
parameter    ap_ST_fsm_state31 = 34'd1073741824;
parameter    ap_ST_fsm_state32 = 34'd2147483648;
parameter    ap_ST_fsm_state33 = 34'd4294967296;
parameter    ap_ST_fsm_state34 = 34'd8589934592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] d_o_din;
input   d_o_full_n;
output   d_o_write;
output  [4:0] d_i_address0;
output   d_i_ce0;
input  [15:0] d_i_q0;
output  [4:0] d_i_address1;
output   d_i_ce1;
input  [15:0] d_i_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] d_o_din;
reg d_o_write;
reg[4:0] d_i_address0;
reg d_i_ce0;
reg[4:0] d_i_address1;
reg d_i_ce1;

(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] acc_0;
reg   [31:0] acc_1;
reg   [31:0] acc_2;
reg   [31:0] acc_3;
reg   [31:0] acc_4;
reg   [31:0] acc_5;
reg   [31:0] acc_6;
reg   [31:0] acc_7;
reg    d_o_blk_n;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
reg  signed [15:0] reg_408;
wire    ap_CS_fsm_state2;
reg  signed [15:0] reg_412;
reg  signed [15:0] reg_416;
reg  signed [15:0] reg_420;
reg  signed [15:0] reg_424;
reg  signed [15:0] reg_428;
reg  signed [15:0] reg_432;
reg  signed [15:0] reg_436;
wire   [15:0] add_ln69_fu_448_p2;
reg   [15:0] add_ln69_reg_1098;
wire   [15:0] add_ln69_1_fu_463_p2;
reg   [15:0] add_ln69_1_reg_1116;
wire   [15:0] add_ln69_2_fu_478_p2;
reg   [15:0] add_ln69_2_reg_1134;
reg  signed [15:0] d_i_load_6_reg_1139;
reg  signed [15:0] d_i_load_7_reg_1145;
wire   [15:0] add_ln69_3_fu_493_p2;
reg   [15:0] add_ln69_3_reg_1164;
reg  signed [15:0] d_i_load_8_reg_1169;
reg  signed [15:0] d_i_load_9_reg_1175;
wire   [15:0] add_ln69_4_fu_508_p2;
reg   [15:0] add_ln69_4_reg_1194;
reg  signed [15:0] d_i_load_10_reg_1199;
reg  signed [15:0] d_i_load_11_reg_1205;
wire   [15:0] add_ln69_5_fu_523_p2;
reg   [15:0] add_ln69_5_reg_1224;
reg  signed [15:0] d_i_load_12_reg_1229;
reg  signed [15:0] d_i_load_13_reg_1235;
wire   [15:0] add_ln69_6_fu_538_p2;
reg   [15:0] add_ln69_6_reg_1254;
reg  signed [15:0] d_i_load_14_reg_1259;
reg  signed [15:0] d_i_load_15_reg_1265;
wire   [15:0] add_ln69_7_fu_552_p2;
reg   [15:0] add_ln69_7_reg_1284;
wire   [15:0] add_ln69_8_fu_558_p2;
reg   [15:0] add_ln69_8_reg_1299;
reg  signed [15:0] d_i_load_18_reg_1304;
reg  signed [15:0] d_i_load_19_reg_1310;
wire   [15:0] add_ln69_9_fu_563_p2;
reg   [15:0] add_ln69_9_reg_1326;
reg  signed [15:0] d_i_load_20_reg_1331;
reg  signed [15:0] d_i_load_21_reg_1337;
wire   [15:0] add_ln69_10_fu_568_p2;
reg   [15:0] add_ln69_10_reg_1353;
reg  signed [15:0] d_i_load_22_reg_1358;
reg  signed [15:0] d_i_load_23_reg_1364;
wire   [15:0] add_ln69_11_fu_573_p2;
reg   [15:0] add_ln69_11_reg_1380;
wire   [15:0] add_ln69_16_fu_582_p2;
reg   [15:0] add_ln69_16_reg_1385;
wire   [15:0] add_ln69_17_fu_591_p2;
reg   [15:0] add_ln69_17_reg_1391;
wire   [16:0] add_ln67_1_fu_600_p2;
reg   [16:0] add_ln67_1_reg_1397;
wire   [16:0] add_ln67_5_fu_610_p2;
reg   [16:0] add_ln67_5_reg_1402;
wire   [15:0] add_ln69_12_fu_630_p2;
reg   [15:0] add_ln69_12_reg_1417;
wire   [15:0] add_ln69_18_fu_638_p2;
reg   [15:0] add_ln69_18_reg_1422;
wire   [15:0] add_ln69_19_fu_645_p2;
reg   [15:0] add_ln69_19_reg_1428;
wire   [16:0] add_ln67_9_fu_713_p2;
reg   [16:0] add_ln67_9_reg_1434;
wire   [16:0] add_ln67_13_fu_723_p2;
reg   [16:0] add_ln67_13_reg_1439;
wire   [15:0] add_ln69_20_fu_751_p2;
reg   [15:0] add_ln69_20_reg_1454;
wire   [15:0] add_ln69_21_fu_758_p2;
reg   [15:0] add_ln69_21_reg_1460;
wire   [16:0] add_ln67_17_fu_827_p2;
reg   [16:0] add_ln67_17_reg_1466;
wire   [16:0] add_ln67_21_fu_837_p2;
reg   [16:0] add_ln67_21_reg_1471;
wire   [15:0] add_ln69_22_fu_865_p2;
reg   [15:0] add_ln69_22_reg_1486;
wire   [16:0] add_ln67_25_fu_937_p2;
reg   [16:0] add_ln67_25_reg_1492;
wire   [16:0] add_ln67_29_fu_947_p2;
reg   [16:0] add_ln67_29_reg_1497;
wire   [15:0] add_ln69_23_fu_970_p2;
reg   [15:0] add_ln69_23_reg_1502;
wire   [15:0] add_ln69_24_fu_1035_p2;
reg   [15:0] add_ln69_24_reg_1508;
wire   [15:0] add_ln69_25_fu_1040_p2;
reg   [15:0] add_ln69_25_reg_1513;
wire   [15:0] add_ln69_26_fu_1045_p2;
reg   [15:0] add_ln69_26_reg_1518;
wire   [15:0] add_ln69_27_fu_1050_p2;
reg   [15:0] add_ln69_27_reg_1523;
wire   [15:0] add_ln69_28_fu_1055_p2;
reg   [15:0] add_ln69_28_reg_1528;
wire   [15:0] add_ln69_29_fu_1060_p2;
reg   [15:0] add_ln69_29_reg_1533;
wire   [15:0] add_ln69_30_fu_1065_p2;
reg   [15:0] add_ln69_30_reg_1538;
wire   [15:0] add_ln69_31_fu_1070_p2;
reg   [15:0] add_ln69_31_reg_1543;
wire   [31:0] temp_fu_667_p2;
wire   [31:0] temp_1_fu_697_p2;
wire   [31:0] temp_2_fu_781_p2;
wire   [31:0] temp_3_fu_811_p2;
wire   [31:0] temp_4_fu_891_p2;
wire   [31:0] temp_5_fu_921_p2;
wire   [31:0] temp_6_fu_993_p2;
wire   [31:0] temp_7_fu_1023_p2;
wire   [15:0] add_ln69_13_fu_743_p2;
wire   [15:0] add_ln69_14_fu_857_p2;
wire   [15:0] add_ln69_15_fu_965_p2;
wire   [15:0] trunc_ln67_fu_444_p1;
wire   [15:0] trunc_ln67_1_fu_459_p1;
wire   [15:0] trunc_ln67_2_fu_474_p1;
wire   [15:0] trunc_ln67_3_fu_489_p1;
wire   [15:0] trunc_ln67_4_fu_504_p1;
wire   [15:0] trunc_ln67_5_fu_519_p1;
wire   [15:0] trunc_ln67_6_fu_534_p1;
wire   [15:0] trunc_ln67_7_fu_548_p1;
wire  signed [15:0] sext_ln67_8_fu_596_p0;
wire  signed [16:0] sext_ln69_8_fu_578_p1;
wire  signed [16:0] sext_ln67_8_fu_596_p1;
wire  signed [15:0] sext_ln67_11_fu_606_p0;
wire  signed [16:0] sext_ln69_9_fu_587_p1;
wire  signed [16:0] sext_ln67_11_fu_606_p1;
wire  signed [31:0] sext_ln67_fu_616_p1;
wire  signed [17:0] sext_ln67_9_fu_654_p1;
wire  signed [17:0] sext_ln69_fu_624_p1;
wire   [17:0] add_ln67_2_fu_657_p2;
wire  signed [31:0] sext_ln67_10_fu_663_p1;
wire   [31:0] add_ln67_fu_649_p2;
wire  signed [31:0] sext_ln67_1_fu_620_p1;
wire  signed [17:0] sext_ln67_12_fu_684_p1;
wire  signed [17:0] sext_ln69_1_fu_627_p1;
wire   [17:0] add_ln67_6_fu_687_p2;
wire  signed [31:0] sext_ln67_13_fu_693_p1;
wire   [31:0] add_ln67_4_fu_679_p2;
wire  signed [15:0] sext_ln67_14_fu_709_p0;
wire  signed [16:0] sext_ln69_10_fu_635_p1;
wire  signed [16:0] sext_ln67_14_fu_709_p1;
wire  signed [15:0] sext_ln67_17_fu_719_p0;
wire  signed [16:0] sext_ln69_11_fu_642_p1;
wire  signed [16:0] sext_ln67_17_fu_719_p1;
wire  signed [31:0] sext_ln67_2_fu_729_p1;
wire  signed [17:0] sext_ln67_15_fu_768_p1;
wire  signed [17:0] sext_ln69_2_fu_737_p1;
wire   [17:0] add_ln67_10_fu_771_p2;
wire  signed [31:0] sext_ln67_16_fu_777_p1;
wire   [31:0] add_ln67_8_fu_763_p2;
wire  signed [31:0] sext_ln67_3_fu_733_p1;
wire  signed [17:0] sext_ln67_18_fu_798_p1;
wire  signed [17:0] sext_ln69_3_fu_740_p1;
wire   [17:0] add_ln67_14_fu_801_p2;
wire  signed [31:0] sext_ln67_19_fu_807_p1;
wire   [31:0] add_ln67_12_fu_793_p2;
wire  signed [15:0] sext_ln67_20_fu_823_p0;
wire  signed [16:0] sext_ln69_12_fu_748_p1;
wire  signed [16:0] sext_ln67_20_fu_823_p1;
wire  signed [15:0] sext_ln67_23_fu_833_p0;
wire  signed [16:0] sext_ln69_13_fu_755_p1;
wire  signed [16:0] sext_ln67_23_fu_833_p1;
wire  signed [31:0] sext_ln67_4_fu_843_p1;
wire  signed [17:0] sext_ln67_21_fu_878_p1;
wire  signed [17:0] sext_ln69_4_fu_851_p1;
wire   [17:0] add_ln67_18_fu_881_p2;
wire  signed [31:0] sext_ln67_22_fu_887_p1;
wire   [31:0] add_ln67_16_fu_873_p2;
wire  signed [31:0] sext_ln67_5_fu_847_p1;
wire  signed [17:0] sext_ln67_24_fu_908_p1;
wire  signed [17:0] sext_ln69_5_fu_854_p1;
wire   [17:0] add_ln67_22_fu_911_p2;
wire  signed [31:0] sext_ln67_25_fu_917_p1;
wire   [31:0] add_ln67_20_fu_903_p2;
wire  signed [15:0] sext_ln67_26_fu_933_p0;
wire  signed [16:0] sext_ln69_14_fu_862_p1;
wire  signed [16:0] sext_ln67_26_fu_933_p1;
wire  signed [15:0] sext_ln67_29_fu_943_p0;
wire  signed [16:0] sext_ln69_15_fu_870_p1;
wire  signed [16:0] sext_ln67_29_fu_943_p1;
wire  signed [31:0] sext_ln67_6_fu_953_p1;
wire  signed [17:0] sext_ln67_27_fu_980_p1;
wire  signed [17:0] sext_ln69_6_fu_959_p1;
wire   [17:0] add_ln67_26_fu_983_p2;
wire  signed [31:0] sext_ln67_28_fu_989_p1;
wire   [31:0] add_ln67_24_fu_975_p2;
wire  signed [31:0] sext_ln67_7_fu_956_p1;
wire  signed [17:0] sext_ln67_30_fu_1010_p1;
wire  signed [17:0] sext_ln69_7_fu_962_p1;
wire   [17:0] add_ln67_30_fu_1013_p2;
wire  signed [31:0] sext_ln67_31_fu_1019_p1;
wire   [31:0] add_ln67_28_fu_1005_p2;
reg   [33:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
reg    ap_ST_fsm_state29_blk;
reg    ap_ST_fsm_state30_blk;
reg    ap_ST_fsm_state31_blk;
reg    ap_ST_fsm_state32_blk;
reg    ap_ST_fsm_state33_blk;
reg    ap_ST_fsm_state34_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 34'd1;
#0 acc_0 = 32'd0;
#0 acc_1 = 32'd0;
#0 acc_2 = 32'd0;
#0 acc_3 = 32'd0;
#0 acc_4 = 32'd0;
#0 acc_5 = 32'd0;
#0 acc_6 = 32'd0;
#0 acc_7 = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        acc_0 <= temp_fu_667_p2;
        acc_1 <= temp_1_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        acc_2 <= temp_2_fu_781_p2;
        acc_3 <= temp_3_fu_811_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        acc_4 <= temp_4_fu_891_p2;
        acc_5 <= temp_5_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        acc_6 <= temp_6_fu_993_p2;
        acc_7 <= temp_7_fu_1023_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln67_13_reg_1439 <= add_ln67_13_fu_723_p2;
        add_ln67_9_reg_1434 <= add_ln67_9_fu_713_p2;
        add_ln69_12_reg_1417 <= add_ln69_12_fu_630_p2;
        add_ln69_18_reg_1422 <= add_ln69_18_fu_638_p2;
        add_ln69_19_reg_1428 <= add_ln69_19_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln67_17_reg_1466 <= add_ln67_17_fu_827_p2;
        add_ln67_21_reg_1471 <= add_ln67_21_fu_837_p2;
        add_ln69_20_reg_1454 <= add_ln69_20_fu_751_p2;
        add_ln69_21_reg_1460 <= add_ln69_21_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln67_1_reg_1397 <= add_ln67_1_fu_600_p2;
        add_ln67_5_reg_1402 <= add_ln67_5_fu_610_p2;
        add_ln69_11_reg_1380 <= add_ln69_11_fu_573_p2;
        add_ln69_16_reg_1385 <= add_ln69_16_fu_582_p2;
        add_ln69_17_reg_1391 <= add_ln69_17_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln67_25_reg_1492 <= add_ln67_25_fu_937_p2;
        add_ln67_29_reg_1497 <= add_ln67_29_fu_947_p2;
        add_ln69_22_reg_1486 <= add_ln69_22_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln69_10_reg_1353 <= add_ln69_10_fu_568_p2;
        d_i_load_22_reg_1358 <= d_i_q1;
        d_i_load_23_reg_1364 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln69_1_reg_1116 <= add_ln69_1_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln69_23_reg_1502 <= add_ln69_23_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln69_24_reg_1508 <= add_ln69_24_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln69_25_reg_1513 <= add_ln69_25_fu_1040_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln69_26_reg_1518 <= add_ln69_26_fu_1045_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln69_27_reg_1523 <= add_ln69_27_fu_1050_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        add_ln69_28_reg_1528 <= add_ln69_28_fu_1055_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        add_ln69_29_reg_1533 <= add_ln69_29_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln69_2_reg_1134 <= add_ln69_2_fu_478_p2;
        d_i_load_6_reg_1139 <= d_i_q1;
        d_i_load_7_reg_1145 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln69_30_reg_1538 <= add_ln69_30_fu_1065_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln69_31_reg_1543 <= add_ln69_31_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln69_3_reg_1164 <= add_ln69_3_fu_493_p2;
        d_i_load_8_reg_1169 <= d_i_q1;
        d_i_load_9_reg_1175 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln69_4_reg_1194 <= add_ln69_4_fu_508_p2;
        d_i_load_10_reg_1199 <= d_i_q1;
        d_i_load_11_reg_1205 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln69_5_reg_1224 <= add_ln69_5_fu_523_p2;
        d_i_load_12_reg_1229 <= d_i_q1;
        d_i_load_13_reg_1235 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln69_6_reg_1254 <= add_ln69_6_fu_538_p2;
        d_i_load_14_reg_1259 <= d_i_q1;
        d_i_load_15_reg_1265 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln69_7_reg_1284 <= add_ln69_7_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln69_8_reg_1299 <= add_ln69_8_fu_558_p2;
        d_i_load_18_reg_1304 <= d_i_q1;
        d_i_load_19_reg_1310 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln69_9_reg_1326 <= add_ln69_9_fu_563_p2;
        d_i_load_20_reg_1331 <= d_i_q1;
        d_i_load_21_reg_1337 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln69_reg_1098 <= add_ln69_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        reg_408 <= d_i_q1;
        reg_412 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        reg_416 <= d_i_q1;
        reg_420 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)))) begin
        reg_424 <= d_i_q1;
        reg_428 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_432 <= d_i_q1;
        reg_436 <= d_i_q0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state29_blk = 1'b1;
    end else begin
        ap_ST_fsm_state29_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state30_blk = 1'b1;
    end else begin
        ap_ST_fsm_state30_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state31_blk = 1'b1;
    end else begin
        ap_ST_fsm_state31_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state32_blk = 1'b1;
    end else begin
        ap_ST_fsm_state32_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state33_blk = 1'b1;
    end else begin
        ap_ST_fsm_state33_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state34_blk = 1'b1;
    end else begin
        ap_ST_fsm_state34_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_i_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_i_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_i_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_i_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_i_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_i_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_i_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_i_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_address0 = 64'd1;
    end else begin
        d_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_i_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_i_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_i_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_i_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_i_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_i_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_i_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_i_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_address1 = 64'd0;
    end else begin
        d_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        d_i_ce0 = 1'b1;
    end else begin
        d_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        d_i_ce1 = 1'b1;
    end else begin
        d_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_blk_n = d_o_full_n;
    end else begin
        d_o_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state34)) begin
            d_o_din = add_ln69_31_reg_1543;
        end else if ((1'b1 == ap_CS_fsm_state33)) begin
            d_o_din = add_ln69_30_reg_1538;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            d_o_din = add_ln69_29_reg_1533;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            d_o_din = add_ln69_28_reg_1528;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            d_o_din = add_ln69_27_reg_1523;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            d_o_din = add_ln69_26_reg_1518;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            d_o_din = add_ln69_25_reg_1513;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            d_o_din = add_ln69_24_reg_1508;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            d_o_din = add_ln69_23_reg_1502;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            d_o_din = add_ln69_22_reg_1486;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            d_o_din = add_ln69_21_reg_1460;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            d_o_din = add_ln69_20_reg_1454;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            d_o_din = add_ln69_19_reg_1428;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            d_o_din = add_ln69_18_reg_1422;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            d_o_din = add_ln69_17_reg_1391;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            d_o_din = add_ln69_16_reg_1385;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            d_o_din = add_ln69_15_fu_965_p2;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            d_o_din = add_ln69_14_fu_857_p2;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            d_o_din = add_ln69_13_fu_743_p2;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            d_o_din = add_ln69_12_fu_630_p2;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            d_o_din = add_ln69_11_fu_573_p2;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            d_o_din = add_ln69_10_fu_568_p2;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            d_o_din = add_ln69_9_fu_563_p2;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            d_o_din = add_ln69_8_fu_558_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            d_o_din = add_ln69_7_fu_552_p2;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            d_o_din = add_ln69_6_fu_538_p2;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            d_o_din = add_ln69_5_fu_523_p2;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            d_o_din = add_ln69_4_fu_508_p2;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            d_o_din = add_ln69_3_fu_493_p2;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            d_o_din = add_ln69_2_fu_478_p2;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            d_o_din = add_ln69_1_fu_463_p2;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            d_o_din = add_ln69_fu_448_p2;
        end else begin
            d_o_din = 'bx;
        end
    end else begin
        d_o_din = 'bx;
    end
end

always @ (*) begin
    if ((((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state34)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        d_o_write = 1'b1;
    end else begin
        d_o_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_10_fu_771_p2 = ($signed(sext_ln67_15_fu_768_p1) + $signed(sext_ln69_2_fu_737_p1));

assign add_ln67_12_fu_793_p2 = ($signed(acc_3) + $signed(sext_ln67_3_fu_733_p1));

assign add_ln67_13_fu_723_p2 = ($signed(sext_ln69_11_fu_642_p1) + $signed(sext_ln67_17_fu_719_p1));

assign add_ln67_14_fu_801_p2 = ($signed(sext_ln67_18_fu_798_p1) + $signed(sext_ln69_3_fu_740_p1));

assign add_ln67_16_fu_873_p2 = ($signed(acc_4) + $signed(sext_ln67_4_fu_843_p1));

assign add_ln67_17_fu_827_p2 = ($signed(sext_ln69_12_fu_748_p1) + $signed(sext_ln67_20_fu_823_p1));

assign add_ln67_18_fu_881_p2 = ($signed(sext_ln67_21_fu_878_p1) + $signed(sext_ln69_4_fu_851_p1));

assign add_ln67_1_fu_600_p2 = ($signed(sext_ln69_8_fu_578_p1) + $signed(sext_ln67_8_fu_596_p1));

assign add_ln67_20_fu_903_p2 = ($signed(acc_5) + $signed(sext_ln67_5_fu_847_p1));

assign add_ln67_21_fu_837_p2 = ($signed(sext_ln69_13_fu_755_p1) + $signed(sext_ln67_23_fu_833_p1));

assign add_ln67_22_fu_911_p2 = ($signed(sext_ln67_24_fu_908_p1) + $signed(sext_ln69_5_fu_854_p1));

assign add_ln67_24_fu_975_p2 = ($signed(acc_6) + $signed(sext_ln67_6_fu_953_p1));

assign add_ln67_25_fu_937_p2 = ($signed(sext_ln69_14_fu_862_p1) + $signed(sext_ln67_26_fu_933_p1));

assign add_ln67_26_fu_983_p2 = ($signed(sext_ln67_27_fu_980_p1) + $signed(sext_ln69_6_fu_959_p1));

assign add_ln67_28_fu_1005_p2 = ($signed(acc_7) + $signed(sext_ln67_7_fu_956_p1));

assign add_ln67_29_fu_947_p2 = ($signed(sext_ln69_15_fu_870_p1) + $signed(sext_ln67_29_fu_943_p1));

assign add_ln67_2_fu_657_p2 = ($signed(sext_ln67_9_fu_654_p1) + $signed(sext_ln69_fu_624_p1));

assign add_ln67_30_fu_1013_p2 = ($signed(sext_ln67_30_fu_1010_p1) + $signed(sext_ln69_7_fu_962_p1));

assign add_ln67_4_fu_679_p2 = ($signed(acc_1) + $signed(sext_ln67_1_fu_620_p1));

assign add_ln67_5_fu_610_p2 = ($signed(sext_ln69_9_fu_587_p1) + $signed(sext_ln67_11_fu_606_p1));

assign add_ln67_6_fu_687_p2 = ($signed(sext_ln67_12_fu_684_p1) + $signed(sext_ln69_1_fu_627_p1));

assign add_ln67_8_fu_763_p2 = ($signed(acc_2) + $signed(sext_ln67_2_fu_729_p1));

assign add_ln67_9_fu_713_p2 = ($signed(sext_ln69_10_fu_635_p1) + $signed(sext_ln67_14_fu_709_p1));

assign add_ln67_fu_649_p2 = ($signed(acc_0) + $signed(sext_ln67_fu_616_p1));

assign add_ln69_10_fu_568_p2 = ($signed(d_i_load_10_reg_1199) + $signed(add_ln69_2_reg_1134));

assign add_ln69_11_fu_573_p2 = ($signed(d_i_load_11_reg_1205) + $signed(add_ln69_3_reg_1164));

assign add_ln69_12_fu_630_p2 = ($signed(d_i_load_12_reg_1229) + $signed(add_ln69_4_reg_1194));

assign add_ln69_13_fu_743_p2 = ($signed(d_i_load_13_reg_1235) + $signed(add_ln69_5_reg_1224));

assign add_ln69_14_fu_857_p2 = ($signed(d_i_load_14_reg_1259) + $signed(add_ln69_6_reg_1254));

assign add_ln69_15_fu_965_p2 = ($signed(d_i_load_15_reg_1265) + $signed(add_ln69_7_reg_1284));

assign add_ln69_16_fu_582_p2 = ($signed(reg_432) + $signed(add_ln69_8_reg_1299));

assign add_ln69_17_fu_591_p2 = ($signed(reg_436) + $signed(add_ln69_9_reg_1326));

assign add_ln69_18_fu_638_p2 = ($signed(d_i_load_18_reg_1304) + $signed(add_ln69_10_reg_1353));

assign add_ln69_19_fu_645_p2 = ($signed(d_i_load_19_reg_1310) + $signed(add_ln69_11_reg_1380));

assign add_ln69_1_fu_463_p2 = ($signed(reg_412) + $signed(trunc_ln67_1_fu_459_p1));

assign add_ln69_20_fu_751_p2 = ($signed(d_i_load_20_reg_1331) + $signed(add_ln69_12_reg_1417));

assign add_ln69_21_fu_758_p2 = ($signed(d_i_load_21_reg_1337) + $signed(add_ln69_13_fu_743_p2));

assign add_ln69_22_fu_865_p2 = ($signed(d_i_load_22_reg_1358) + $signed(add_ln69_14_fu_857_p2));

assign add_ln69_23_fu_970_p2 = ($signed(d_i_load_23_reg_1364) + $signed(add_ln69_15_fu_965_p2));

assign add_ln69_24_fu_1035_p2 = ($signed(reg_432) + $signed(add_ln69_16_reg_1385));

assign add_ln69_25_fu_1040_p2 = ($signed(reg_436) + $signed(add_ln69_17_reg_1391));

assign add_ln69_26_fu_1045_p2 = ($signed(reg_408) + $signed(add_ln69_18_reg_1422));

assign add_ln69_27_fu_1050_p2 = ($signed(reg_412) + $signed(add_ln69_19_reg_1428));

assign add_ln69_28_fu_1055_p2 = ($signed(reg_416) + $signed(add_ln69_20_reg_1454));

assign add_ln69_29_fu_1060_p2 = ($signed(reg_420) + $signed(add_ln69_21_reg_1460));

assign add_ln69_2_fu_478_p2 = ($signed(reg_416) + $signed(trunc_ln67_2_fu_474_p1));

assign add_ln69_30_fu_1065_p2 = ($signed(reg_424) + $signed(add_ln69_22_reg_1486));

assign add_ln69_31_fu_1070_p2 = ($signed(reg_428) + $signed(add_ln69_23_reg_1502));

assign add_ln69_3_fu_493_p2 = ($signed(reg_420) + $signed(trunc_ln67_3_fu_489_p1));

assign add_ln69_4_fu_508_p2 = ($signed(reg_424) + $signed(trunc_ln67_4_fu_504_p1));

assign add_ln69_5_fu_523_p2 = ($signed(reg_428) + $signed(trunc_ln67_5_fu_519_p1));

assign add_ln69_6_fu_538_p2 = ($signed(d_i_load_6_reg_1139) + $signed(trunc_ln67_6_fu_534_p1));

assign add_ln69_7_fu_552_p2 = ($signed(d_i_load_7_reg_1145) + $signed(trunc_ln67_7_fu_548_p1));

assign add_ln69_8_fu_558_p2 = ($signed(d_i_load_8_reg_1169) + $signed(add_ln69_reg_1098));

assign add_ln69_9_fu_563_p2 = ($signed(d_i_load_9_reg_1175) + $signed(add_ln69_1_reg_1116));

assign add_ln69_fu_448_p2 = ($signed(reg_408) + $signed(trunc_ln67_fu_444_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign sext_ln67_10_fu_663_p1 = $signed(add_ln67_2_fu_657_p2);

assign sext_ln67_11_fu_606_p0 = d_i_q0;

assign sext_ln67_11_fu_606_p1 = sext_ln67_11_fu_606_p0;

assign sext_ln67_12_fu_684_p1 = $signed(add_ln67_5_reg_1402);

assign sext_ln67_13_fu_693_p1 = $signed(add_ln67_6_fu_687_p2);

assign sext_ln67_14_fu_709_p0 = d_i_q1;

assign sext_ln67_14_fu_709_p1 = sext_ln67_14_fu_709_p0;

assign sext_ln67_15_fu_768_p1 = $signed(add_ln67_9_reg_1434);

assign sext_ln67_16_fu_777_p1 = $signed(add_ln67_10_fu_771_p2);

assign sext_ln67_17_fu_719_p0 = d_i_q0;

assign sext_ln67_17_fu_719_p1 = sext_ln67_17_fu_719_p0;

assign sext_ln67_18_fu_798_p1 = $signed(add_ln67_13_reg_1439);

assign sext_ln67_19_fu_807_p1 = $signed(add_ln67_14_fu_801_p2);

assign sext_ln67_1_fu_620_p1 = reg_412;

assign sext_ln67_20_fu_823_p0 = d_i_q1;

assign sext_ln67_20_fu_823_p1 = sext_ln67_20_fu_823_p0;

assign sext_ln67_21_fu_878_p1 = $signed(add_ln67_17_reg_1466);

assign sext_ln67_22_fu_887_p1 = $signed(add_ln67_18_fu_881_p2);

assign sext_ln67_23_fu_833_p0 = d_i_q0;

assign sext_ln67_23_fu_833_p1 = sext_ln67_23_fu_833_p0;

assign sext_ln67_24_fu_908_p1 = $signed(add_ln67_21_reg_1471);

assign sext_ln67_25_fu_917_p1 = $signed(add_ln67_22_fu_911_p2);

assign sext_ln67_26_fu_933_p0 = d_i_q1;

assign sext_ln67_26_fu_933_p1 = sext_ln67_26_fu_933_p0;

assign sext_ln67_27_fu_980_p1 = $signed(add_ln67_25_reg_1492);

assign sext_ln67_28_fu_989_p1 = $signed(add_ln67_26_fu_983_p2);

assign sext_ln67_29_fu_943_p0 = d_i_q0;

assign sext_ln67_29_fu_943_p1 = sext_ln67_29_fu_943_p0;

assign sext_ln67_2_fu_729_p1 = reg_416;

assign sext_ln67_30_fu_1010_p1 = $signed(add_ln67_29_reg_1497);

assign sext_ln67_31_fu_1019_p1 = $signed(add_ln67_30_fu_1013_p2);

assign sext_ln67_3_fu_733_p1 = reg_420;

assign sext_ln67_4_fu_843_p1 = reg_424;

assign sext_ln67_5_fu_847_p1 = reg_428;

assign sext_ln67_6_fu_953_p1 = d_i_load_6_reg_1139;

assign sext_ln67_7_fu_956_p1 = d_i_load_7_reg_1145;

assign sext_ln67_8_fu_596_p0 = d_i_q1;

assign sext_ln67_8_fu_596_p1 = sext_ln67_8_fu_596_p0;

assign sext_ln67_9_fu_654_p1 = $signed(add_ln67_1_reg_1397);

assign sext_ln67_fu_616_p1 = reg_408;

assign sext_ln69_10_fu_635_p1 = d_i_load_18_reg_1304;

assign sext_ln69_11_fu_642_p1 = d_i_load_19_reg_1310;

assign sext_ln69_12_fu_748_p1 = d_i_load_20_reg_1331;

assign sext_ln69_13_fu_755_p1 = d_i_load_21_reg_1337;

assign sext_ln69_14_fu_862_p1 = d_i_load_22_reg_1358;

assign sext_ln69_15_fu_870_p1 = d_i_load_23_reg_1364;

assign sext_ln69_1_fu_627_p1 = d_i_load_9_reg_1175;

assign sext_ln69_2_fu_737_p1 = d_i_load_10_reg_1199;

assign sext_ln69_3_fu_740_p1 = d_i_load_11_reg_1205;

assign sext_ln69_4_fu_851_p1 = d_i_load_12_reg_1229;

assign sext_ln69_5_fu_854_p1 = d_i_load_13_reg_1235;

assign sext_ln69_6_fu_959_p1 = d_i_load_14_reg_1259;

assign sext_ln69_7_fu_962_p1 = d_i_load_15_reg_1265;

assign sext_ln69_8_fu_578_p1 = reg_432;

assign sext_ln69_9_fu_587_p1 = reg_436;

assign sext_ln69_fu_624_p1 = d_i_load_8_reg_1169;

assign temp_1_fu_697_p2 = ($signed(sext_ln67_13_fu_693_p1) + $signed(add_ln67_4_fu_679_p2));

assign temp_2_fu_781_p2 = ($signed(sext_ln67_16_fu_777_p1) + $signed(add_ln67_8_fu_763_p2));

assign temp_3_fu_811_p2 = ($signed(sext_ln67_19_fu_807_p1) + $signed(add_ln67_12_fu_793_p2));

assign temp_4_fu_891_p2 = ($signed(sext_ln67_22_fu_887_p1) + $signed(add_ln67_16_fu_873_p2));

assign temp_5_fu_921_p2 = ($signed(sext_ln67_25_fu_917_p1) + $signed(add_ln67_20_fu_903_p2));

assign temp_6_fu_993_p2 = ($signed(sext_ln67_28_fu_989_p1) + $signed(add_ln67_24_fu_975_p2));

assign temp_7_fu_1023_p2 = ($signed(sext_ln67_31_fu_1019_p1) + $signed(add_ln67_28_fu_1005_p2));

assign temp_fu_667_p2 = ($signed(sext_ln67_10_fu_663_p1) + $signed(add_ln67_fu_649_p2));

assign trunc_ln67_1_fu_459_p1 = acc_1[15:0];

assign trunc_ln67_2_fu_474_p1 = acc_2[15:0];

assign trunc_ln67_3_fu_489_p1 = acc_3[15:0];

assign trunc_ln67_4_fu_504_p1 = acc_4[15:0];

assign trunc_ln67_5_fu_519_p1 = acc_5[15:0];

assign trunc_ln67_6_fu_534_p1 = acc_6[15:0];

assign trunc_ln67_7_fu_548_p1 = acc_7[15:0];

assign trunc_ln67_fu_444_p1 = acc_0[15:0];

endmodule //array_io
