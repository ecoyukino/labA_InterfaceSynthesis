-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity array_io is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    d_o_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_full_n : IN STD_LOGIC;
    d_o_0_write : OUT STD_LOGIC;
    d_o_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_full_n : IN STD_LOGIC;
    d_o_1_write : OUT STD_LOGIC;
    d_o_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_full_n : IN STD_LOGIC;
    d_o_2_write : OUT STD_LOGIC;
    d_o_3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_full_n : IN STD_LOGIC;
    d_o_3_write : OUT STD_LOGIC;
    d_i_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce0 : OUT STD_LOGIC;
    d_i_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce1 : OUT STD_LOGIC;
    d_i_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce0 : OUT STD_LOGIC;
    d_i_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce1 : OUT STD_LOGIC;
    d_i_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of array_io is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "array_io_array_io,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.581000,HLS_SYN_LAT=10,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=867,HLS_SYN_LUT=2135,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal d_o_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal d_o_1_blk_n : STD_LOGIC;
    signal d_o_2_blk_n : STD_LOGIC;
    signal d_o_3_blk_n : STD_LOGIC;
    signal reg_414 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal ap_block_state9 : BOOLEAN;
    signal reg_418 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_422 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_426 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_430 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_fu_442_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_reg_1121 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_1_fu_456_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_1_reg_1142 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_1_fu_474_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_reg_1155 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_fu_484_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_reg_1166 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_fu_489_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_reg_1176 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_5_fu_533_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_5_reg_1187 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_2_fu_551_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_reg_1200 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_fu_561_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_reg_1211 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_fu_566_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_reg_1221 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_9_fu_616_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_9_reg_1232 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_3_fu_634_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_reg_1245 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_fu_644_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_reg_1256 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_fu_649_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_reg_1266 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_13_fu_699_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_13_reg_1277 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_4_fu_717_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_reg_1290 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_fu_727_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_reg_1301 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_fu_732_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_reg_1311 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_17_fu_782_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_17_reg_1322 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_5_fu_800_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_reg_1335 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_fu_810_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_reg_1346 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_fu_815_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_reg_1356 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_21_fu_865_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_21_reg_1367 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_6_fu_883_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_reg_1380 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_fu_893_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_reg_1391 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_fu_898_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_reg_1401 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_25_fu_948_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_25_reg_1412 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_7_fu_966_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_reg_1425 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_fu_976_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_reg_1431 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_fu_981_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_reg_1436 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_29_fu_1031_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_29_reg_1442 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_15_fu_1045_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_reg_1447 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_fu_1050_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_reg_1452 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_fu_517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_1_fu_600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_fu_683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_fu_766_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_fu_849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_5_fu_932_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_fu_1015_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_fu_1080_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10 : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal add_ln69_24_fu_576_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_25_fu_659_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_26_fu_742_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_27_fu_825_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_28_fu_908_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_29_fu_991_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_30_fu_1056_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_31_fu_1092_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_fu_442_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_fu_438_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_8_fu_448_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_8_fu_452_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_8_fu_448_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_8_fu_452_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_1_fu_474_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_1_fu_470_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_9_fu_495_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_fu_462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_9_fu_504_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_fu_480_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_2_fu_507_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_10_fu_513_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_fu_499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_11_fu_529_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_9_fu_495_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_11_fu_529_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_2_fu_551_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_2_fu_547_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_10_fu_572_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_1_fu_539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_12_fu_587_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_1_fu_557_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_6_fu_590_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_13_fu_596_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_4_fu_582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_14_fu_612_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_10_fu_572_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_14_fu_612_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_3_fu_634_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_3_fu_630_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_11_fu_655_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_2_fu_622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_15_fu_670_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_2_fu_640_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_10_fu_673_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_16_fu_679_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_8_fu_665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_17_fu_695_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_11_fu_655_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_17_fu_695_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_4_fu_717_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_4_fu_713_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_12_fu_738_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_3_fu_705_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_18_fu_753_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_3_fu_723_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_14_fu_756_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_19_fu_762_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_12_fu_748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_20_fu_778_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_12_fu_738_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_20_fu_778_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_5_fu_800_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_5_fu_796_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_13_fu_821_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_4_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_21_fu_836_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_4_fu_806_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_18_fu_839_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_22_fu_845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_16_fu_831_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_23_fu_861_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_13_fu_821_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_23_fu_861_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_6_fu_883_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_6_fu_879_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_14_fu_904_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_5_fu_871_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_24_fu_919_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_5_fu_889_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_22_fu_922_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_25_fu_928_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_20_fu_914_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_26_fu_944_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_14_fu_904_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_26_fu_944_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_7_fu_966_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_7_fu_962_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_15_fu_987_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_6_fu_954_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_27_fu_1002_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_6_fu_972_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_26_fu_1005_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_28_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_24_fu_997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_29_fu_1027_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_15_fu_987_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_29_fu_1027_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_7_fu_1037_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_30_fu_1067_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_7_fu_1041_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_30_fu_1070_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_31_fu_1076_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_28_fu_1062_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_condition_144 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                acc_0 <= temp_fu_517_p2;
                add_ln67_5_reg_1187 <= add_ln67_5_fu_533_p2;
                add_ln69_16_reg_1176 <= add_ln69_16_fu_489_p2;
                add_ln69_1_reg_1155 <= add_ln69_1_fu_474_p2;
                add_ln69_8_reg_1166 <= add_ln69_8_fu_484_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                acc_1 <= temp_1_fu_600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                acc_2 <= temp_2_fu_683_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                acc_3 <= temp_3_fu_766_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                acc_4 <= temp_4_fu_849_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                acc_5 <= temp_5_fu_932_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                acc_6 <= temp_6_fu_1015_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                acc_7 <= temp_7_fu_1080_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln67_13_reg_1277 <= add_ln67_13_fu_699_p2;
                add_ln69_10_reg_1256 <= add_ln69_10_fu_644_p2;
                add_ln69_18_reg_1266 <= add_ln69_18_fu_649_p2;
                add_ln69_3_reg_1245 <= add_ln69_3_fu_634_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln67_17_reg_1322 <= add_ln67_17_fu_782_p2;
                add_ln69_11_reg_1301 <= add_ln69_11_fu_727_p2;
                add_ln69_19_reg_1311 <= add_ln69_19_fu_732_p2;
                add_ln69_4_reg_1290 <= add_ln69_4_fu_717_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln67_1_reg_1142 <= add_ln67_1_fu_456_p2;
                add_ln69_reg_1121 <= add_ln69_fu_442_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln67_21_reg_1367 <= add_ln67_21_fu_865_p2;
                add_ln69_12_reg_1346 <= add_ln69_12_fu_810_p2;
                add_ln69_20_reg_1356 <= add_ln69_20_fu_815_p2;
                add_ln69_5_reg_1335 <= add_ln69_5_fu_800_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln67_25_reg_1412 <= add_ln67_25_fu_948_p2;
                add_ln69_13_reg_1391 <= add_ln69_13_fu_893_p2;
                add_ln69_21_reg_1401 <= add_ln69_21_fu_898_p2;
                add_ln69_6_reg_1380 <= add_ln69_6_fu_883_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln67_29_reg_1442 <= add_ln67_29_fu_1031_p2;
                add_ln69_14_reg_1431 <= add_ln69_14_fu_976_p2;
                add_ln69_22_reg_1436 <= add_ln69_22_fu_981_p2;
                add_ln69_7_reg_1425 <= add_ln69_7_fu_966_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln67_9_reg_1232 <= add_ln67_9_fu_616_p2;
                add_ln69_17_reg_1221 <= add_ln69_17_fu_566_p2;
                add_ln69_2_reg_1200 <= add_ln69_2_fu_551_p2;
                add_ln69_9_reg_1211 <= add_ln69_9_fu_561_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln69_15_reg_1447 <= add_ln69_15_fu_1045_p2;
                add_ln69_23_reg_1452 <= add_ln69_23_fu_1050_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then
                reg_414 <= d_i_0_q1;
                reg_418 <= d_i_0_q0;
                reg_422 <= d_i_1_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then
                reg_426 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then
                reg_430 <= d_i_1_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln67_10_fu_673_p2 <= std_logic_vector(signed(sext_ln67_15_fu_670_p1) + signed(sext_ln69_2_fu_640_p1));
    add_ln67_12_fu_748_p2 <= std_logic_vector(unsigned(acc_3) + unsigned(sext_ln67_3_fu_705_p1));
    add_ln67_13_fu_699_p2 <= std_logic_vector(signed(sext_ln69_11_fu_655_p1) + signed(sext_ln67_17_fu_695_p1));
    add_ln67_14_fu_756_p2 <= std_logic_vector(signed(sext_ln67_18_fu_753_p1) + signed(sext_ln69_3_fu_723_p1));
    add_ln67_16_fu_831_p2 <= std_logic_vector(unsigned(acc_4) + unsigned(sext_ln67_4_fu_788_p1));
    add_ln67_17_fu_782_p2 <= std_logic_vector(signed(sext_ln69_12_fu_738_p1) + signed(sext_ln67_20_fu_778_p1));
    add_ln67_18_fu_839_p2 <= std_logic_vector(signed(sext_ln67_21_fu_836_p1) + signed(sext_ln69_4_fu_806_p1));
    add_ln67_1_fu_456_p2 <= std_logic_vector(signed(sext_ln69_8_fu_448_p1) + signed(sext_ln67_8_fu_452_p1));
    add_ln67_20_fu_914_p2 <= std_logic_vector(unsigned(acc_5) + unsigned(sext_ln67_5_fu_871_p1));
    add_ln67_21_fu_865_p2 <= std_logic_vector(signed(sext_ln69_13_fu_821_p1) + signed(sext_ln67_23_fu_861_p1));
    add_ln67_22_fu_922_p2 <= std_logic_vector(signed(sext_ln67_24_fu_919_p1) + signed(sext_ln69_5_fu_889_p1));
    add_ln67_24_fu_997_p2 <= std_logic_vector(unsigned(acc_6) + unsigned(sext_ln67_6_fu_954_p1));
    add_ln67_25_fu_948_p2 <= std_logic_vector(signed(sext_ln69_14_fu_904_p1) + signed(sext_ln67_26_fu_944_p1));
    add_ln67_26_fu_1005_p2 <= std_logic_vector(signed(sext_ln67_27_fu_1002_p1) + signed(sext_ln69_6_fu_972_p1));
    add_ln67_28_fu_1062_p2 <= std_logic_vector(unsigned(acc_7) + unsigned(sext_ln67_7_fu_1037_p1));
    add_ln67_29_fu_1031_p2 <= std_logic_vector(signed(sext_ln69_15_fu_987_p1) + signed(sext_ln67_29_fu_1027_p1));
    add_ln67_2_fu_507_p2 <= std_logic_vector(signed(sext_ln67_9_fu_504_p1) + signed(sext_ln69_fu_480_p1));
    add_ln67_30_fu_1070_p2 <= std_logic_vector(signed(sext_ln67_30_fu_1067_p1) + signed(sext_ln69_7_fu_1041_p1));
    add_ln67_4_fu_582_p2 <= std_logic_vector(unsigned(acc_1) + unsigned(sext_ln67_1_fu_539_p1));
    add_ln67_5_fu_533_p2 <= std_logic_vector(signed(sext_ln69_9_fu_495_p1) + signed(sext_ln67_11_fu_529_p1));
    add_ln67_6_fu_590_p2 <= std_logic_vector(signed(sext_ln67_12_fu_587_p1) + signed(sext_ln69_1_fu_557_p1));
    add_ln67_8_fu_665_p2 <= std_logic_vector(unsigned(acc_2) + unsigned(sext_ln67_2_fu_622_p1));
    add_ln67_9_fu_616_p2 <= std_logic_vector(signed(sext_ln69_10_fu_572_p1) + signed(sext_ln67_14_fu_612_p1));
    add_ln67_fu_499_p2 <= std_logic_vector(unsigned(acc_0) + unsigned(sext_ln67_fu_462_p1));
    add_ln69_10_fu_644_p2 <= std_logic_vector(signed(reg_418) + signed(add_ln69_2_reg_1200));
    add_ln69_11_fu_727_p2 <= std_logic_vector(signed(reg_418) + signed(add_ln69_3_reg_1245));
    add_ln69_12_fu_810_p2 <= std_logic_vector(signed(reg_418) + signed(add_ln69_4_reg_1290));
    add_ln69_13_fu_893_p2 <= std_logic_vector(signed(reg_418) + signed(add_ln69_5_reg_1335));
    add_ln69_14_fu_976_p2 <= std_logic_vector(signed(reg_418) + signed(add_ln69_6_reg_1380));
    add_ln69_15_fu_1045_p2 <= std_logic_vector(signed(reg_418) + signed(add_ln69_7_reg_1425));
    add_ln69_16_fu_489_p2 <= std_logic_vector(signed(reg_422) + signed(add_ln69_8_fu_484_p2));
    add_ln69_17_fu_566_p2 <= std_logic_vector(signed(reg_422) + signed(add_ln69_9_fu_561_p2));
    add_ln69_18_fu_649_p2 <= std_logic_vector(signed(reg_422) + signed(add_ln69_10_fu_644_p2));
    add_ln69_19_fu_732_p2 <= std_logic_vector(signed(reg_422) + signed(add_ln69_11_fu_727_p2));
    add_ln69_1_fu_474_p0 <= d_i_0_q1;
    add_ln69_1_fu_474_p2 <= std_logic_vector(signed(add_ln69_1_fu_474_p0) + signed(trunc_ln67_1_fu_470_p1));
    add_ln69_20_fu_815_p2 <= std_logic_vector(signed(reg_422) + signed(add_ln69_12_fu_810_p2));
    add_ln69_21_fu_898_p2 <= std_logic_vector(signed(reg_422) + signed(add_ln69_13_fu_893_p2));
    add_ln69_22_fu_981_p2 <= std_logic_vector(signed(reg_422) + signed(add_ln69_14_fu_976_p2));
    add_ln69_23_fu_1050_p2 <= std_logic_vector(signed(reg_422) + signed(add_ln69_15_fu_1045_p2));
    add_ln69_24_fu_576_p2 <= std_logic_vector(signed(reg_426) + signed(add_ln69_16_reg_1176));
    add_ln69_25_fu_659_p2 <= std_logic_vector(signed(reg_430) + signed(add_ln69_17_reg_1221));
    add_ln69_26_fu_742_p2 <= std_logic_vector(signed(reg_426) + signed(add_ln69_18_reg_1266));
    add_ln69_27_fu_825_p2 <= std_logic_vector(signed(reg_430) + signed(add_ln69_19_reg_1311));
    add_ln69_28_fu_908_p2 <= std_logic_vector(signed(reg_426) + signed(add_ln69_20_reg_1356));
    add_ln69_29_fu_991_p2 <= std_logic_vector(signed(reg_430) + signed(add_ln69_21_reg_1401));
    add_ln69_2_fu_551_p0 <= d_i_0_q1;
    add_ln69_2_fu_551_p2 <= std_logic_vector(signed(add_ln69_2_fu_551_p0) + signed(trunc_ln67_2_fu_547_p1));
    add_ln69_30_fu_1056_p2 <= std_logic_vector(signed(reg_426) + signed(add_ln69_22_reg_1436));
    add_ln69_31_fu_1092_p2 <= std_logic_vector(signed(reg_430) + signed(add_ln69_23_reg_1452));
    add_ln69_3_fu_634_p0 <= d_i_0_q1;
    add_ln69_3_fu_634_p2 <= std_logic_vector(signed(add_ln69_3_fu_634_p0) + signed(trunc_ln67_3_fu_630_p1));
    add_ln69_4_fu_717_p0 <= d_i_0_q1;
    add_ln69_4_fu_717_p2 <= std_logic_vector(signed(add_ln69_4_fu_717_p0) + signed(trunc_ln67_4_fu_713_p1));
    add_ln69_5_fu_800_p0 <= d_i_0_q1;
    add_ln69_5_fu_800_p2 <= std_logic_vector(signed(add_ln69_5_fu_800_p0) + signed(trunc_ln67_5_fu_796_p1));
    add_ln69_6_fu_883_p0 <= d_i_0_q1;
    add_ln69_6_fu_883_p2 <= std_logic_vector(signed(add_ln69_6_fu_883_p0) + signed(trunc_ln67_6_fu_879_p1));
    add_ln69_7_fu_966_p0 <= d_i_0_q1;
    add_ln69_7_fu_966_p2 <= std_logic_vector(signed(add_ln69_7_fu_966_p0) + signed(trunc_ln67_7_fu_962_p1));
    add_ln69_8_fu_484_p2 <= std_logic_vector(signed(reg_418) + signed(add_ln69_reg_1121));
    add_ln69_9_fu_561_p2 <= std_logic_vector(signed(reg_418) + signed(add_ln69_1_reg_1155));
    add_ln69_fu_442_p0 <= d_i_0_q1;
    add_ln69_fu_442_p2 <= std_logic_vector(signed(add_ln69_fu_442_p0) + signed(trunc_ln67_fu_438_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state10_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state10 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state11_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state11 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state4 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state5 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state6 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state7 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state8 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state9 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_condition_144_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_condition_144 <= not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state11)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state11)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_0_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_0_address0 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_0_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address0 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address0 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        else 
            d_i_0_address0 <= "XXXX";
        end if; 
    end process;


    d_i_0_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_0_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_0_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_0_address1 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address1 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_0_address1 <= "XXXX";
        end if; 
    end process;


    d_i_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            d_i_0_ce0 <= ap_const_logic_1;
        else 
            d_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            d_i_0_ce1 <= ap_const_logic_1;
        else 
            d_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_1_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_1_address0 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_1_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address0 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address0 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        else 
            d_i_1_address0 <= "XXXX";
        end if; 
    end process;


    d_i_1_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_1_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_1_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_1_address1 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address1 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_1_address1 <= "XXXX";
        end if; 
    end process;


    d_i_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            d_i_1_ce0 <= ap_const_logic_1;
        else 
            d_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            d_i_1_ce1 <= ap_const_logic_1;
        else 
            d_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_blk_n_assign_proc : process(d_o_0_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_0_blk_n <= d_o_0_full_n;
        else 
            d_o_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_0_din_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, add_ln69_reg_1121, add_ln69_1_reg_1155, add_ln69_2_reg_1200, add_ln69_3_reg_1245, add_ln69_4_reg_1290, add_ln69_5_reg_1335, add_ln69_6_reg_1380, add_ln69_7_reg_1425, ap_condition_144)
    begin
        if ((ap_const_boolean_1 = ap_condition_144)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                d_o_0_din <= add_ln69_7_reg_1425;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_0_din <= add_ln69_6_reg_1380;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_0_din <= add_ln69_5_reg_1335;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_0_din <= add_ln69_4_reg_1290;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_0_din <= add_ln69_3_reg_1245;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_0_din <= add_ln69_2_reg_1200;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_0_din <= add_ln69_1_reg_1155;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_0_din <= add_ln69_reg_1121;
            else 
                d_o_0_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_0_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_0_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            d_o_0_write <= ap_const_logic_1;
        else 
            d_o_0_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_blk_n_assign_proc : process(d_o_1_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_1_blk_n <= d_o_1_full_n;
        else 
            d_o_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_1_din_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, add_ln69_8_reg_1166, add_ln69_9_reg_1211, add_ln69_10_reg_1256, add_ln69_11_reg_1301, add_ln69_12_reg_1346, add_ln69_13_reg_1391, add_ln69_14_reg_1431, add_ln69_15_reg_1447, ap_condition_144)
    begin
        if ((ap_const_boolean_1 = ap_condition_144)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                d_o_1_din <= add_ln69_15_reg_1447;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_1_din <= add_ln69_14_reg_1431;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_1_din <= add_ln69_13_reg_1391;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_1_din <= add_ln69_12_reg_1346;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_1_din <= add_ln69_11_reg_1301;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_1_din <= add_ln69_10_reg_1256;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_1_din <= add_ln69_9_reg_1211;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_1_din <= add_ln69_8_reg_1166;
            else 
                d_o_1_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_1_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_1_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            d_o_1_write <= ap_const_logic_1;
        else 
            d_o_1_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_blk_n_assign_proc : process(d_o_2_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_2_blk_n <= d_o_2_full_n;
        else 
            d_o_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_2_din_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, add_ln69_16_reg_1176, add_ln69_17_reg_1221, add_ln69_18_reg_1266, add_ln69_19_reg_1311, add_ln69_20_reg_1356, add_ln69_21_reg_1401, add_ln69_22_reg_1436, add_ln69_23_reg_1452, ap_condition_144)
    begin
        if ((ap_const_boolean_1 = ap_condition_144)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                d_o_2_din <= add_ln69_23_reg_1452;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_2_din <= add_ln69_22_reg_1436;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_2_din <= add_ln69_21_reg_1401;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_2_din <= add_ln69_20_reg_1356;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_2_din <= add_ln69_19_reg_1311;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_2_din <= add_ln69_18_reg_1266;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_2_din <= add_ln69_17_reg_1221;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_2_din <= add_ln69_16_reg_1176;
            else 
                d_o_2_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_2_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_2_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            d_o_2_write <= ap_const_logic_1;
        else 
            d_o_2_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_blk_n_assign_proc : process(d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_3_blk_n <= d_o_3_full_n;
        else 
            d_o_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_3_din_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, add_ln69_24_fu_576_p2, add_ln69_25_fu_659_p2, add_ln69_26_fu_742_p2, add_ln69_27_fu_825_p2, add_ln69_28_fu_908_p2, add_ln69_29_fu_991_p2, add_ln69_30_fu_1056_p2, add_ln69_31_fu_1092_p2, ap_condition_144)
    begin
        if ((ap_const_boolean_1 = ap_condition_144)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                d_o_3_din <= add_ln69_31_fu_1092_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_3_din <= add_ln69_30_fu_1056_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_3_din <= add_ln69_29_fu_991_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_3_din <= add_ln69_28_fu_908_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_3_din <= add_ln69_27_fu_825_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_3_din <= add_ln69_26_fu_742_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_3_din <= add_ln69_25_fu_659_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_3_din <= add_ln69_24_fu_576_p2;
            else 
                d_o_3_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_3_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_3_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            d_o_3_write <= ap_const_logic_1;
        else 
            d_o_3_write <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln67_10_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_2_fu_507_p2),32));

    sext_ln67_11_fu_529_p0 <= d_i_1_q0;
        sext_ln67_11_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_11_fu_529_p0),17));

        sext_ln67_12_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_5_reg_1187),18));

        sext_ln67_13_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_6_fu_590_p2),32));

    sext_ln67_14_fu_612_p0 <= d_i_1_q0;
        sext_ln67_14_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_14_fu_612_p0),17));

        sext_ln67_15_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_9_reg_1232),18));

        sext_ln67_16_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_10_fu_673_p2),32));

    sext_ln67_17_fu_695_p0 <= d_i_1_q0;
        sext_ln67_17_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_17_fu_695_p0),17));

        sext_ln67_18_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_13_reg_1277),18));

        sext_ln67_19_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_14_fu_756_p2),32));

        sext_ln67_1_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_414),32));

    sext_ln67_20_fu_778_p0 <= d_i_1_q0;
        sext_ln67_20_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_20_fu_778_p0),17));

        sext_ln67_21_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_17_reg_1322),18));

        sext_ln67_22_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_18_fu_839_p2),32));

    sext_ln67_23_fu_861_p0 <= d_i_1_q0;
        sext_ln67_23_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_23_fu_861_p0),17));

        sext_ln67_24_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_21_reg_1367),18));

        sext_ln67_25_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_22_fu_922_p2),32));

    sext_ln67_26_fu_944_p0 <= d_i_1_q0;
        sext_ln67_26_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_26_fu_944_p0),17));

        sext_ln67_27_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_25_reg_1412),18));

        sext_ln67_28_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_26_fu_1005_p2),32));

    sext_ln67_29_fu_1027_p0 <= d_i_1_q0;
        sext_ln67_29_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_29_fu_1027_p0),17));

        sext_ln67_2_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_414),32));

        sext_ln67_30_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_29_reg_1442),18));

        sext_ln67_31_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_30_fu_1070_p2),32));

        sext_ln67_3_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_414),32));

        sext_ln67_4_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_414),32));

        sext_ln67_5_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_414),32));

        sext_ln67_6_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_414),32));

        sext_ln67_7_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_414),32));

    sext_ln67_8_fu_452_p0 <= d_i_1_q0;
        sext_ln67_8_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_8_fu_452_p0),17));

        sext_ln67_9_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_1_reg_1142),18));

        sext_ln67_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_414),32));

    sext_ln69_10_fu_572_p0 <= d_i_1_q1;
        sext_ln69_10_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_10_fu_572_p0),17));

    sext_ln69_11_fu_655_p0 <= d_i_1_q1;
        sext_ln69_11_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_11_fu_655_p0),17));

    sext_ln69_12_fu_738_p0 <= d_i_1_q1;
        sext_ln69_12_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_12_fu_738_p0),17));

    sext_ln69_13_fu_821_p0 <= d_i_1_q1;
        sext_ln69_13_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_13_fu_821_p0),17));

    sext_ln69_14_fu_904_p0 <= d_i_1_q1;
        sext_ln69_14_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_14_fu_904_p0),17));

    sext_ln69_15_fu_987_p0 <= d_i_1_q1;
        sext_ln69_15_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_15_fu_987_p0),17));

        sext_ln69_1_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_418),18));

        sext_ln69_2_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_418),18));

        sext_ln69_3_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_418),18));

        sext_ln69_4_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_418),18));

        sext_ln69_5_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_418),18));

        sext_ln69_6_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_418),18));

        sext_ln69_7_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_418),18));

    sext_ln69_8_fu_448_p0 <= d_i_1_q1;
        sext_ln69_8_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_8_fu_448_p0),17));

    sext_ln69_9_fu_495_p0 <= d_i_1_q1;
        sext_ln69_9_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_9_fu_495_p0),17));

        sext_ln69_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_418),18));

    temp_1_fu_600_p2 <= std_logic_vector(signed(sext_ln67_13_fu_596_p1) + signed(add_ln67_4_fu_582_p2));
    temp_2_fu_683_p2 <= std_logic_vector(signed(sext_ln67_16_fu_679_p1) + signed(add_ln67_8_fu_665_p2));
    temp_3_fu_766_p2 <= std_logic_vector(signed(sext_ln67_19_fu_762_p1) + signed(add_ln67_12_fu_748_p2));
    temp_4_fu_849_p2 <= std_logic_vector(signed(sext_ln67_22_fu_845_p1) + signed(add_ln67_16_fu_831_p2));
    temp_5_fu_932_p2 <= std_logic_vector(signed(sext_ln67_25_fu_928_p1) + signed(add_ln67_20_fu_914_p2));
    temp_6_fu_1015_p2 <= std_logic_vector(signed(sext_ln67_28_fu_1011_p1) + signed(add_ln67_24_fu_997_p2));
    temp_7_fu_1080_p2 <= std_logic_vector(signed(sext_ln67_31_fu_1076_p1) + signed(add_ln67_28_fu_1062_p2));
    temp_fu_517_p2 <= std_logic_vector(signed(sext_ln67_10_fu_513_p1) + signed(add_ln67_fu_499_p2));
    trunc_ln67_1_fu_470_p1 <= acc_1(16 - 1 downto 0);
    trunc_ln67_2_fu_547_p1 <= acc_2(16 - 1 downto 0);
    trunc_ln67_3_fu_630_p1 <= acc_3(16 - 1 downto 0);
    trunc_ln67_4_fu_713_p1 <= acc_4(16 - 1 downto 0);
    trunc_ln67_5_fu_796_p1 <= acc_5(16 - 1 downto 0);
    trunc_ln67_6_fu_879_p1 <= acc_6(16 - 1 downto 0);
    trunc_ln67_7_fu_962_p1 <= acc_7(16 - 1 downto 0);
    trunc_ln67_fu_438_p1 <= acc_0(16 - 1 downto 0);
end behav;
