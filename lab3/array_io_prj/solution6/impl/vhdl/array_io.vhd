-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity array_io is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    d_o_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_full_n : IN STD_LOGIC;
    d_o_0_write : OUT STD_LOGIC;
    d_o_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_full_n : IN STD_LOGIC;
    d_o_1_write : OUT STD_LOGIC;
    d_o_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_full_n : IN STD_LOGIC;
    d_o_2_write : OUT STD_LOGIC;
    d_o_3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_full_n : IN STD_LOGIC;
    d_o_3_write : OUT STD_LOGIC;
    d_i_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce0 : OUT STD_LOGIC;
    d_i_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce1 : OUT STD_LOGIC;
    d_i_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce0 : OUT STD_LOGIC;
    d_i_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce1 : OUT STD_LOGIC;
    d_i_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of array_io is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "array_io_array_io,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.581000,HLS_SYN_LAT=9,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1298,HLS_SYN_LUT=2129,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal d_o_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal d_o_1_blk_n : STD_LOGIC;
    signal d_o_2_blk_n : STD_LOGIC;
    signal d_o_3_blk_n : STD_LOGIC;
    signal d_i_0_load_reg_1058 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal d_i_1_load_reg_1064 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_1_reg_1070 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_1_reg_1076 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_fu_422_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_reg_1105 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_fu_436_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_reg_1113 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_fu_450_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_reg_1121 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_fu_464_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_reg_1129 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_2_reg_1134 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_2_reg_1140 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_3_reg_1146 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_3_reg_1152 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_fu_478_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_reg_1181 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_fu_492_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_reg_1189 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_fu_506_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_reg_1197 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_fu_520_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_reg_1205 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_4_reg_1210 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_4_reg_1216 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_5_reg_1222 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_5_reg_1228 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_fu_526_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_reg_1254 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_fu_531_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_reg_1259 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_fu_536_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_reg_1264 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_fu_541_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_reg_1269 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_6_reg_1274 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_6_reg_1280 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_7_reg_1286 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_7_reg_1292 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_fu_546_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_reg_1318 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_fu_551_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_reg_1323 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_fu_556_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_reg_1328 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_fu_561_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_reg_1333 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_8_reg_1338 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_8_reg_1344 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_9_reg_1350 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_9_reg_1356 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_fu_566_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_reg_1382 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_fu_571_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_reg_1387 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_fu_576_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_reg_1392 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_fu_581_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_reg_1397 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_10_reg_1402 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_10_reg_1408 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_11_reg_1414 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_11_reg_1420 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_fu_598_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_reg_1446 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_fu_603_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_reg_1451 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_fu_608_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_reg_1456 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_fu_613_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_reg_1461 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_1_fu_622_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_1_reg_1466 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_24_fu_628_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_24_reg_1471 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_5_fu_637_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_5_reg_1476 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_25_fu_643_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_25_reg_1481 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_9_fu_652_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_9_reg_1486 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_26_fu_658_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_26_reg_1491 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_13_fu_667_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_13_reg_1496 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_27_fu_673_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_27_reg_1501 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_17_fu_838_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_17_reg_1526 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_28_fu_844_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_28_reg_1531 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_21_fu_853_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_21_reg_1536 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_29_fu_859_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_29_reg_1541 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_25_fu_868_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_25_reg_1546 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_30_fu_874_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_30_reg_1551 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_29_fu_883_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_29_reg_1556 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_31_fu_889_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_31_reg_1561 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_fu_732_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state9 : BOOLEAN;
    signal temp_1_fu_762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_fu_936_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10 : BOOLEAN;
    signal temp_5_fu_966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_fu_996_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_fu_1026_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal trunc_ln67_fu_418_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_1_fu_432_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_2_fu_446_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_3_fu_460_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_4_fu_474_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_5_fu_488_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_6_fu_502_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_7_fu_516_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_8_fu_618_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_8_fu_586_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_8_fu_618_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_24_fu_628_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_11_fu_633_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_9_fu_589_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_11_fu_633_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_25_fu_643_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_14_fu_648_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_10_fu_592_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_14_fu_648_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_26_fu_658_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_17_fu_663_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_11_fu_595_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_17_fu_663_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_27_fu_673_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_fu_678_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_9_fu_719_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_fu_690_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_2_fu_722_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_10_fu_728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_fu_714_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_1_fu_681_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_12_fu_749_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_1_fu_693_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_6_fu_752_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_13_fu_758_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_4_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_2_fu_684_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_15_fu_779_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_2_fu_696_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_10_fu_782_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_16_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_8_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_3_fu_687_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_18_fu_809_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_3_fu_699_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_14_fu_812_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_19_fu_818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_12_fu_804_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_20_fu_834_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_12_fu_702_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_20_fu_834_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_28_fu_844_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_23_fu_849_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_13_fu_705_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_23_fu_849_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_29_fu_859_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_26_fu_864_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_14_fu_708_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_26_fu_864_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_30_fu_874_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_29_fu_879_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_15_fu_711_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_29_fu_879_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_31_fu_889_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_4_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_21_fu_923_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_4_fu_906_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_18_fu_926_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_22_fu_932_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_16_fu_918_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_5_fu_897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_24_fu_953_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_5_fu_909_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_22_fu_956_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_25_fu_962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_20_fu_948_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_6_fu_900_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_27_fu_983_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_6_fu_912_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_26_fu_986_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_28_fu_992_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_24_fu_978_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_7_fu_903_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_30_fu_1013_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_7_fu_915_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_30_fu_1016_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_31_fu_1022_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_28_fu_1008_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_condition_321 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                acc_0 <= temp_fu_732_p2;
                acc_1 <= temp_1_fu_762_p2;
                acc_2 <= temp_2_fu_792_p2;
                acc_3 <= temp_3_fu_822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                acc_4 <= temp_4_fu_936_p2;
                acc_5 <= temp_5_fu_966_p2;
                acc_6 <= temp_6_fu_996_p2;
                acc_7 <= temp_7_fu_1026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln67_13_reg_1496 <= add_ln67_13_fu_667_p2;
                add_ln67_1_reg_1466 <= add_ln67_1_fu_622_p2;
                add_ln67_5_reg_1476 <= add_ln67_5_fu_637_p2;
                add_ln67_9_reg_1486 <= add_ln67_9_fu_652_p2;
                add_ln69_20_reg_1446 <= add_ln69_20_fu_598_p2;
                add_ln69_21_reg_1451 <= add_ln69_21_fu_603_p2;
                add_ln69_22_reg_1456 <= add_ln69_22_fu_608_p2;
                add_ln69_23_reg_1461 <= add_ln69_23_fu_613_p2;
                add_ln69_24_reg_1471 <= add_ln69_24_fu_628_p2;
                add_ln69_25_reg_1481 <= add_ln69_25_fu_643_p2;
                add_ln69_26_reg_1491 <= add_ln69_26_fu_658_p2;
                add_ln69_27_reg_1501 <= add_ln69_27_fu_673_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln67_17_reg_1526 <= add_ln67_17_fu_838_p2;
                add_ln67_21_reg_1536 <= add_ln67_21_fu_853_p2;
                add_ln67_25_reg_1546 <= add_ln67_25_fu_868_p2;
                add_ln67_29_reg_1556 <= add_ln67_29_fu_883_p2;
                add_ln69_28_reg_1531 <= add_ln69_28_fu_844_p2;
                add_ln69_29_reg_1541 <= add_ln69_29_fu_859_p2;
                add_ln69_30_reg_1551 <= add_ln69_30_fu_874_p2;
                add_ln69_31_reg_1561 <= add_ln69_31_fu_889_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln69_10_reg_1264 <= add_ln69_10_fu_536_p2;
                add_ln69_11_reg_1269 <= add_ln69_11_fu_541_p2;
                add_ln69_8_reg_1254 <= add_ln69_8_fu_526_p2;
                add_ln69_9_reg_1259 <= add_ln69_9_fu_531_p2;
                d_i_0_load_6_reg_1274 <= d_i_0_q1;
                d_i_0_load_7_reg_1286 <= d_i_0_q0;
                d_i_1_load_6_reg_1280 <= d_i_1_q1;
                d_i_1_load_7_reg_1292 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln69_12_reg_1318 <= add_ln69_12_fu_546_p2;
                add_ln69_13_reg_1323 <= add_ln69_13_fu_551_p2;
                add_ln69_14_reg_1328 <= add_ln69_14_fu_556_p2;
                add_ln69_15_reg_1333 <= add_ln69_15_fu_561_p2;
                d_i_0_load_8_reg_1338 <= d_i_0_q1;
                d_i_0_load_9_reg_1350 <= d_i_0_q0;
                d_i_1_load_8_reg_1344 <= d_i_1_q1;
                d_i_1_load_9_reg_1356 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln69_16_reg_1382 <= add_ln69_16_fu_566_p2;
                add_ln69_17_reg_1387 <= add_ln69_17_fu_571_p2;
                add_ln69_18_reg_1392 <= add_ln69_18_fu_576_p2;
                add_ln69_19_reg_1397 <= add_ln69_19_fu_581_p2;
                d_i_0_load_10_reg_1402 <= d_i_0_q1;
                d_i_0_load_11_reg_1414 <= d_i_0_q0;
                d_i_1_load_10_reg_1408 <= d_i_1_q1;
                d_i_1_load_11_reg_1420 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln69_1_reg_1113 <= add_ln69_1_fu_436_p2;
                add_ln69_2_reg_1121 <= add_ln69_2_fu_450_p2;
                add_ln69_3_reg_1129 <= add_ln69_3_fu_464_p2;
                add_ln69_reg_1105 <= add_ln69_fu_422_p2;
                d_i_0_load_2_reg_1134 <= d_i_0_q1;
                d_i_0_load_3_reg_1146 <= d_i_0_q0;
                d_i_1_load_2_reg_1140 <= d_i_1_q1;
                d_i_1_load_3_reg_1152 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln69_4_reg_1181 <= add_ln69_4_fu_478_p2;
                add_ln69_5_reg_1189 <= add_ln69_5_fu_492_p2;
                add_ln69_6_reg_1197 <= add_ln69_6_fu_506_p2;
                add_ln69_7_reg_1205 <= add_ln69_7_fu_520_p2;
                d_i_0_load_4_reg_1210 <= d_i_0_q1;
                d_i_0_load_5_reg_1222 <= d_i_0_q0;
                d_i_1_load_4_reg_1216 <= d_i_1_q1;
                d_i_1_load_5_reg_1228 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                d_i_0_load_1_reg_1070 <= d_i_0_q0;
                d_i_0_load_reg_1058 <= d_i_0_q1;
                d_i_1_load_1_reg_1076 <= d_i_1_q0;
                d_i_1_load_reg_1064 <= d_i_1_q1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln67_10_fu_782_p2 <= std_logic_vector(signed(sext_ln67_15_fu_779_p1) + signed(sext_ln69_2_fu_696_p1));
    add_ln67_12_fu_804_p2 <= std_logic_vector(unsigned(acc_3) + unsigned(sext_ln67_3_fu_687_p1));
    add_ln67_13_fu_667_p2 <= std_logic_vector(signed(sext_ln69_11_fu_595_p1) + signed(sext_ln67_17_fu_663_p1));
    add_ln67_14_fu_812_p2 <= std_logic_vector(signed(sext_ln67_18_fu_809_p1) + signed(sext_ln69_3_fu_699_p1));
    add_ln67_16_fu_918_p2 <= std_logic_vector(unsigned(acc_4) + unsigned(sext_ln67_4_fu_894_p1));
    add_ln67_17_fu_838_p2 <= std_logic_vector(signed(sext_ln69_12_fu_702_p1) + signed(sext_ln67_20_fu_834_p1));
    add_ln67_18_fu_926_p2 <= std_logic_vector(signed(sext_ln67_21_fu_923_p1) + signed(sext_ln69_4_fu_906_p1));
    add_ln67_1_fu_622_p2 <= std_logic_vector(signed(sext_ln69_8_fu_586_p1) + signed(sext_ln67_8_fu_618_p1));
    add_ln67_20_fu_948_p2 <= std_logic_vector(unsigned(acc_5) + unsigned(sext_ln67_5_fu_897_p1));
    add_ln67_21_fu_853_p2 <= std_logic_vector(signed(sext_ln69_13_fu_705_p1) + signed(sext_ln67_23_fu_849_p1));
    add_ln67_22_fu_956_p2 <= std_logic_vector(signed(sext_ln67_24_fu_953_p1) + signed(sext_ln69_5_fu_909_p1));
    add_ln67_24_fu_978_p2 <= std_logic_vector(unsigned(acc_6) + unsigned(sext_ln67_6_fu_900_p1));
    add_ln67_25_fu_868_p2 <= std_logic_vector(signed(sext_ln69_14_fu_708_p1) + signed(sext_ln67_26_fu_864_p1));
    add_ln67_26_fu_986_p2 <= std_logic_vector(signed(sext_ln67_27_fu_983_p1) + signed(sext_ln69_6_fu_912_p1));
    add_ln67_28_fu_1008_p2 <= std_logic_vector(unsigned(acc_7) + unsigned(sext_ln67_7_fu_903_p1));
    add_ln67_29_fu_883_p2 <= std_logic_vector(signed(sext_ln69_15_fu_711_p1) + signed(sext_ln67_29_fu_879_p1));
    add_ln67_2_fu_722_p2 <= std_logic_vector(signed(sext_ln67_9_fu_719_p1) + signed(sext_ln69_fu_690_p1));
    add_ln67_30_fu_1016_p2 <= std_logic_vector(signed(sext_ln67_30_fu_1013_p1) + signed(sext_ln69_7_fu_915_p1));
    add_ln67_4_fu_744_p2 <= std_logic_vector(unsigned(acc_1) + unsigned(sext_ln67_1_fu_681_p1));
    add_ln67_5_fu_637_p2 <= std_logic_vector(signed(sext_ln69_9_fu_589_p1) + signed(sext_ln67_11_fu_633_p1));
    add_ln67_6_fu_752_p2 <= std_logic_vector(signed(sext_ln67_12_fu_749_p1) + signed(sext_ln69_1_fu_693_p1));
    add_ln67_8_fu_774_p2 <= std_logic_vector(unsigned(acc_2) + unsigned(sext_ln67_2_fu_684_p1));
    add_ln67_9_fu_652_p2 <= std_logic_vector(signed(sext_ln69_10_fu_592_p1) + signed(sext_ln67_14_fu_648_p1));
    add_ln67_fu_714_p2 <= std_logic_vector(unsigned(acc_0) + unsigned(sext_ln67_fu_678_p1));
    add_ln69_10_fu_536_p2 <= std_logic_vector(signed(d_i_0_load_5_reg_1222) + signed(add_ln69_2_reg_1121));
    add_ln69_11_fu_541_p2 <= std_logic_vector(signed(d_i_1_load_5_reg_1228) + signed(add_ln69_3_reg_1129));
    add_ln69_12_fu_546_p2 <= std_logic_vector(signed(d_i_0_load_6_reg_1274) + signed(add_ln69_4_reg_1181));
    add_ln69_13_fu_551_p2 <= std_logic_vector(signed(d_i_1_load_6_reg_1280) + signed(add_ln69_5_reg_1189));
    add_ln69_14_fu_556_p2 <= std_logic_vector(signed(d_i_0_load_7_reg_1286) + signed(add_ln69_6_reg_1197));
    add_ln69_15_fu_561_p2 <= std_logic_vector(signed(d_i_1_load_7_reg_1292) + signed(add_ln69_7_reg_1205));
    add_ln69_16_fu_566_p2 <= std_logic_vector(signed(d_i_0_load_8_reg_1338) + signed(add_ln69_8_reg_1254));
    add_ln69_17_fu_571_p2 <= std_logic_vector(signed(d_i_1_load_8_reg_1344) + signed(add_ln69_9_reg_1259));
    add_ln69_18_fu_576_p2 <= std_logic_vector(signed(d_i_0_load_9_reg_1350) + signed(add_ln69_10_reg_1264));
    add_ln69_19_fu_581_p2 <= std_logic_vector(signed(d_i_1_load_9_reg_1356) + signed(add_ln69_11_reg_1269));
    add_ln69_1_fu_436_p2 <= std_logic_vector(signed(d_i_1_load_reg_1064) + signed(trunc_ln67_1_fu_432_p1));
    add_ln69_20_fu_598_p2 <= std_logic_vector(signed(d_i_0_load_10_reg_1402) + signed(add_ln69_12_reg_1318));
    add_ln69_21_fu_603_p2 <= std_logic_vector(signed(d_i_1_load_10_reg_1408) + signed(add_ln69_13_reg_1323));
    add_ln69_22_fu_608_p2 <= std_logic_vector(signed(d_i_0_load_11_reg_1414) + signed(add_ln69_14_reg_1328));
    add_ln69_23_fu_613_p2 <= std_logic_vector(signed(d_i_1_load_11_reg_1420) + signed(add_ln69_15_reg_1333));
    add_ln69_24_fu_628_p0 <= d_i_0_q1;
    add_ln69_24_fu_628_p2 <= std_logic_vector(signed(add_ln69_24_fu_628_p0) + signed(add_ln69_16_reg_1382));
    add_ln69_25_fu_643_p0 <= d_i_1_q1;
    add_ln69_25_fu_643_p2 <= std_logic_vector(signed(add_ln69_25_fu_643_p0) + signed(add_ln69_17_reg_1387));
    add_ln69_26_fu_658_p0 <= d_i_0_q0;
    add_ln69_26_fu_658_p2 <= std_logic_vector(signed(add_ln69_26_fu_658_p0) + signed(add_ln69_18_reg_1392));
    add_ln69_27_fu_673_p0 <= d_i_1_q0;
    add_ln69_27_fu_673_p2 <= std_logic_vector(signed(add_ln69_27_fu_673_p0) + signed(add_ln69_19_reg_1397));
    add_ln69_28_fu_844_p0 <= d_i_0_q1;
    add_ln69_28_fu_844_p2 <= std_logic_vector(signed(add_ln69_28_fu_844_p0) + signed(add_ln69_20_reg_1446));
    add_ln69_29_fu_859_p0 <= d_i_1_q1;
    add_ln69_29_fu_859_p2 <= std_logic_vector(signed(add_ln69_29_fu_859_p0) + signed(add_ln69_21_reg_1451));
    add_ln69_2_fu_450_p2 <= std_logic_vector(signed(d_i_0_load_1_reg_1070) + signed(trunc_ln67_2_fu_446_p1));
    add_ln69_30_fu_874_p0 <= d_i_0_q0;
    add_ln69_30_fu_874_p2 <= std_logic_vector(signed(add_ln69_30_fu_874_p0) + signed(add_ln69_22_reg_1456));
    add_ln69_31_fu_889_p0 <= d_i_1_q0;
    add_ln69_31_fu_889_p2 <= std_logic_vector(signed(add_ln69_31_fu_889_p0) + signed(add_ln69_23_reg_1461));
    add_ln69_3_fu_464_p2 <= std_logic_vector(signed(d_i_1_load_1_reg_1076) + signed(trunc_ln67_3_fu_460_p1));
    add_ln69_4_fu_478_p2 <= std_logic_vector(signed(d_i_0_load_2_reg_1134) + signed(trunc_ln67_4_fu_474_p1));
    add_ln69_5_fu_492_p2 <= std_logic_vector(signed(d_i_1_load_2_reg_1140) + signed(trunc_ln67_5_fu_488_p1));
    add_ln69_6_fu_506_p2 <= std_logic_vector(signed(d_i_0_load_3_reg_1146) + signed(trunc_ln67_6_fu_502_p1));
    add_ln69_7_fu_520_p2 <= std_logic_vector(signed(d_i_1_load_3_reg_1152) + signed(trunc_ln67_7_fu_516_p1));
    add_ln69_8_fu_526_p2 <= std_logic_vector(signed(d_i_0_load_4_reg_1210) + signed(add_ln69_reg_1105));
    add_ln69_9_fu_531_p2 <= std_logic_vector(signed(d_i_1_load_4_reg_1216) + signed(add_ln69_1_reg_1113));
    add_ln69_fu_422_p2 <= std_logic_vector(signed(d_i_0_load_reg_1058) + signed(trunc_ln67_fu_418_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state10_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state10 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state3 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state4 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state5 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state6 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state7 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state8 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state9 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_condition_321_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_condition_321 <= not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state10)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state10)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_0_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_0_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_0_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            d_i_0_address0 <= "XXXX";
        end if; 
    end process;


    d_i_0_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_0_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_0_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_0_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_0_address1 <= "XXXX";
        end if; 
    end process;


    d_i_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            d_i_0_ce0 <= ap_const_logic_1;
        else 
            d_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            d_i_0_ce1 <= ap_const_logic_1;
        else 
            d_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_1_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_1_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_1_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            d_i_1_address0 <= "XXXX";
        end if; 
    end process;


    d_i_1_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_1_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_1_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_1_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_1_address1 <= "XXXX";
        end if; 
    end process;


    d_i_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            d_i_1_ce0 <= ap_const_logic_1;
        else 
            d_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            d_i_1_ce1 <= ap_const_logic_1;
        else 
            d_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_blk_n_assign_proc : process(d_o_0_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_0_blk_n <= d_o_0_full_n;
        else 
            d_o_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_0_din_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_fu_422_p2, add_ln69_4_fu_478_p2, add_ln69_8_fu_526_p2, add_ln69_12_fu_546_p2, add_ln69_16_fu_566_p2, add_ln69_20_fu_598_p2, add_ln69_24_reg_1471, add_ln69_28_reg_1531, ap_condition_321)
    begin
        if ((ap_const_boolean_1 = ap_condition_321)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_0_din <= add_ln69_28_reg_1531;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_0_din <= add_ln69_24_reg_1471;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_0_din <= add_ln69_20_fu_598_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_0_din <= add_ln69_16_fu_566_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_0_din <= add_ln69_12_fu_546_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_0_din <= add_ln69_8_fu_526_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_0_din <= add_ln69_4_fu_478_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_0_din <= add_ln69_fu_422_p2;
            else 
                d_o_0_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_0_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_0_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            d_o_0_write <= ap_const_logic_1;
        else 
            d_o_0_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_blk_n_assign_proc : process(d_o_1_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_1_blk_n <= d_o_1_full_n;
        else 
            d_o_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_1_din_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_1_fu_436_p2, add_ln69_5_fu_492_p2, add_ln69_9_fu_531_p2, add_ln69_13_fu_551_p2, add_ln69_17_fu_571_p2, add_ln69_21_fu_603_p2, add_ln69_25_reg_1481, add_ln69_29_reg_1541, ap_condition_321)
    begin
        if ((ap_const_boolean_1 = ap_condition_321)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_1_din <= add_ln69_29_reg_1541;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_1_din <= add_ln69_25_reg_1481;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_1_din <= add_ln69_21_fu_603_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_1_din <= add_ln69_17_fu_571_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_1_din <= add_ln69_13_fu_551_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_1_din <= add_ln69_9_fu_531_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_1_din <= add_ln69_5_fu_492_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_1_din <= add_ln69_1_fu_436_p2;
            else 
                d_o_1_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_1_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_1_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            d_o_1_write <= ap_const_logic_1;
        else 
            d_o_1_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_blk_n_assign_proc : process(d_o_2_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_2_blk_n <= d_o_2_full_n;
        else 
            d_o_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_2_din_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_2_fu_450_p2, add_ln69_6_fu_506_p2, add_ln69_10_fu_536_p2, add_ln69_14_fu_556_p2, add_ln69_18_fu_576_p2, add_ln69_22_fu_608_p2, add_ln69_26_reg_1491, add_ln69_30_reg_1551, ap_condition_321)
    begin
        if ((ap_const_boolean_1 = ap_condition_321)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_2_din <= add_ln69_30_reg_1551;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_2_din <= add_ln69_26_reg_1491;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_2_din <= add_ln69_22_fu_608_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_2_din <= add_ln69_18_fu_576_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_2_din <= add_ln69_14_fu_556_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_2_din <= add_ln69_10_fu_536_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_2_din <= add_ln69_6_fu_506_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_2_din <= add_ln69_2_fu_450_p2;
            else 
                d_o_2_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_2_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_2_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            d_o_2_write <= ap_const_logic_1;
        else 
            d_o_2_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_blk_n_assign_proc : process(d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_3_blk_n <= d_o_3_full_n;
        else 
            d_o_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_3_din_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_3_fu_464_p2, add_ln69_7_fu_520_p2, add_ln69_11_fu_541_p2, add_ln69_15_fu_561_p2, add_ln69_19_fu_581_p2, add_ln69_23_fu_613_p2, add_ln69_27_reg_1501, add_ln69_31_reg_1561, ap_condition_321)
    begin
        if ((ap_const_boolean_1 = ap_condition_321)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_3_din <= add_ln69_31_reg_1561;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_3_din <= add_ln69_27_reg_1501;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_3_din <= add_ln69_23_fu_613_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_3_din <= add_ln69_19_fu_581_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_3_din <= add_ln69_15_fu_561_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_3_din <= add_ln69_11_fu_541_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_3_din <= add_ln69_7_fu_520_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_3_din <= add_ln69_3_fu_464_p2;
            else 
                d_o_3_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_3_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_3_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            d_o_3_write <= ap_const_logic_1;
        else 
            d_o_3_write <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln67_10_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_2_fu_722_p2),32));

    sext_ln67_11_fu_633_p0 <= d_i_1_q1;
        sext_ln67_11_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_11_fu_633_p0),17));

        sext_ln67_12_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_5_reg_1476),18));

        sext_ln67_13_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_6_fu_752_p2),32));

    sext_ln67_14_fu_648_p0 <= d_i_0_q0;
        sext_ln67_14_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_14_fu_648_p0),17));

        sext_ln67_15_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_9_reg_1486),18));

        sext_ln67_16_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_10_fu_782_p2),32));

    sext_ln67_17_fu_663_p0 <= d_i_1_q0;
        sext_ln67_17_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_17_fu_663_p0),17));

        sext_ln67_18_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_13_reg_1496),18));

        sext_ln67_19_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_14_fu_812_p2),32));

        sext_ln67_1_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_reg_1064),32));

    sext_ln67_20_fu_834_p0 <= d_i_0_q1;
        sext_ln67_20_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_20_fu_834_p0),17));

        sext_ln67_21_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_17_reg_1526),18));

        sext_ln67_22_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_18_fu_926_p2),32));

    sext_ln67_23_fu_849_p0 <= d_i_1_q1;
        sext_ln67_23_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_23_fu_849_p0),17));

        sext_ln67_24_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_21_reg_1536),18));

        sext_ln67_25_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_22_fu_956_p2),32));

    sext_ln67_26_fu_864_p0 <= d_i_0_q0;
        sext_ln67_26_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_26_fu_864_p0),17));

        sext_ln67_27_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_25_reg_1546),18));

        sext_ln67_28_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_26_fu_986_p2),32));

    sext_ln67_29_fu_879_p0 <= d_i_1_q0;
        sext_ln67_29_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_29_fu_879_p0),17));

        sext_ln67_2_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_1_reg_1070),32));

        sext_ln67_30_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_29_reg_1556),18));

        sext_ln67_31_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_30_fu_1016_p2),32));

        sext_ln67_3_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_1_reg_1076),32));

        sext_ln67_4_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_2_reg_1134),32));

        sext_ln67_5_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_2_reg_1140),32));

        sext_ln67_6_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_3_reg_1146),32));

        sext_ln67_7_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_3_reg_1152),32));

    sext_ln67_8_fu_618_p0 <= d_i_0_q1;
        sext_ln67_8_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_8_fu_618_p0),17));

        sext_ln67_9_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_1_reg_1466),18));

        sext_ln67_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_reg_1058),32));

        sext_ln69_10_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_9_reg_1350),17));

        sext_ln69_11_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_9_reg_1356),17));

        sext_ln69_12_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_10_reg_1402),17));

        sext_ln69_13_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_10_reg_1408),17));

        sext_ln69_14_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_11_reg_1414),17));

        sext_ln69_15_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_11_reg_1420),17));

        sext_ln69_1_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_4_reg_1216),18));

        sext_ln69_2_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_5_reg_1222),18));

        sext_ln69_3_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_5_reg_1228),18));

        sext_ln69_4_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_6_reg_1274),18));

        sext_ln69_5_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_6_reg_1280),18));

        sext_ln69_6_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_7_reg_1286),18));

        sext_ln69_7_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_7_reg_1292),18));

        sext_ln69_8_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_8_reg_1338),17));

        sext_ln69_9_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_8_reg_1344),17));

        sext_ln69_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_4_reg_1210),18));

    temp_1_fu_762_p2 <= std_logic_vector(signed(sext_ln67_13_fu_758_p1) + signed(add_ln67_4_fu_744_p2));
    temp_2_fu_792_p2 <= std_logic_vector(signed(sext_ln67_16_fu_788_p1) + signed(add_ln67_8_fu_774_p2));
    temp_3_fu_822_p2 <= std_logic_vector(signed(sext_ln67_19_fu_818_p1) + signed(add_ln67_12_fu_804_p2));
    temp_4_fu_936_p2 <= std_logic_vector(signed(sext_ln67_22_fu_932_p1) + signed(add_ln67_16_fu_918_p2));
    temp_5_fu_966_p2 <= std_logic_vector(signed(sext_ln67_25_fu_962_p1) + signed(add_ln67_20_fu_948_p2));
    temp_6_fu_996_p2 <= std_logic_vector(signed(sext_ln67_28_fu_992_p1) + signed(add_ln67_24_fu_978_p2));
    temp_7_fu_1026_p2 <= std_logic_vector(signed(sext_ln67_31_fu_1022_p1) + signed(add_ln67_28_fu_1008_p2));
    temp_fu_732_p2 <= std_logic_vector(signed(sext_ln67_10_fu_728_p1) + signed(add_ln67_fu_714_p2));
    trunc_ln67_1_fu_432_p1 <= acc_1(16 - 1 downto 0);
    trunc_ln67_2_fu_446_p1 <= acc_2(16 - 1 downto 0);
    trunc_ln67_3_fu_460_p1 <= acc_3(16 - 1 downto 0);
    trunc_ln67_4_fu_474_p1 <= acc_4(16 - 1 downto 0);
    trunc_ln67_5_fu_488_p1 <= acc_5(16 - 1 downto 0);
    trunc_ln67_6_fu_502_p1 <= acc_6(16 - 1 downto 0);
    trunc_ln67_7_fu_516_p1 <= acc_7(16 - 1 downto 0);
    trunc_ln67_fu_418_p1 <= acc_0(16 - 1 downto 0);
end behav;
